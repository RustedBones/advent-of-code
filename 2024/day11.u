day11.parseNat = Nat.fromText >> getOrBug "Invalid Nat"

day11.part1 : '{IO, Exception} ()
day11.part1 = do
  blink stones = cases
    [] -> stones
    0 +: rest -> blink (stones :+ 1) rest
    stone +: rest ->
      str = Nat.toText stone
      len = Text.size str
      if len % 2 == 0 then
        half = len / 2
        (h, l) = Text.splitAt half str 
                  |> Tuple.bimap (parseNat)
        blink (stones ++ [h, l]) rest
      else
        blink (stones :+ (2024 * stone)) rest
      

  solve input = 
    stones = input |> Text.split ?\s |> List.map (parseNat)

    Stream.fold! (xs -> _ -> blink [] xs) stones (Stream.until 25)
      |> List.size
      |> Nat.toText

  submitSolution (Day 11) (Part 1) solve


day11.part2 : '{IO, Exception} ()
day11.part2 = do
  countStones cache blinks stone = 
    match Map.get (blinks, stone) cache with
      Some count -> (cache, count)
      None ->
        if blinks == 0 then 
          ((Map.put (0, stone) 1 cache), 1)
        else if stone == 0 then
          (retCache, count) = countStones cache (blinks - 1) 1
          ((Map.put (blinks, 0) count retCache), count)
        else
          str = Nat.toText stone
          len = Text.size str
          if len % 2 == 0 then
            half = len / 2
            (h, l) = Text.splitAt half str |> Tuple.bimap (parseNat)
            (hCache, hCount) = countStones cache (blinks - 1) h
            (lCache, lCount) =  countStones hCache (blinks - 1) l
            count = hCount + lCount
            retCache = Map.put (blinks, stone) count lCache
            (retCache, count)
          else
            (retCache, count) = countStones cache (blinks - 1) (2024 * stone)
            ((Map.put (blinks, stone) count retCache), count)
        
  solve input = 
    stones = input |> Text.split ?\s |> List.map (parseNat)

    stones
      |> List.foldLeft (cases (cache, total), stone ->
          (retCache, count) = countStones cache 75 stone
          (retCache, total + count)
      ) (Map.empty, 0)
      |> at2
      |> Nat.toText
        
  submitSolution (Day 11) (Part 2) solve

